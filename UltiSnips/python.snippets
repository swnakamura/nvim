snippet pdb "pydebug" b
__import__('pdb').set_trace()
endsnippet
snippet pf "print format" b
print(f"{$1}")$0
endsnippet
snippet plotbase "plot base" b
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from matplotlib.ticker import AutoMinorLocator, MultipleLocator
from scipy.constants import *
plt.rcParams['text.usetex'] = True
plt.rcParams['axes.axisbelow'] = True
plt.rcParams['font.family'] = 'Times New Roman'
plt.rcParams['figure.figsize'] = [6.4, 4.8]

MARKER_LIST = ['o', 'v', '^', '<', '>', 's', 'p']
# see https://matplotlib.org/examples/color/colormaps_reference.html for colormap
cmap = plt.get_cmap("tab10")

data_path= "$2"

DATA_LIST = [
    {"name": r"", "path": data_path, "column": "$3"},
]

fig, ax = plt.subplots()
ax.xaxis.set_minor_locator(AutoMinorLocator(10))
ax.yaxis.set_minor_locator(AutoMinorLocator(10))
ax.tick_params(which='major', direction='in', length=10)
ax.tick_params(which='minor', direction='in', length=5)
plt.grid(which='major', color='skyblue', linestyle='-', lw=0.2)
plt.grid(which='minor', color='skyblue', linestyle='-', lw=0.2)
ax.set_xlabel(r'$4')
ax.set_ylabel(r'$5')
# plt.yscale("log")
# plt.ylim((0.0001, 100))

DO_FITTING = $1

for ite, DATA in enumerate(DATA_LIST):
	if DATA['path'][-3:] == 'tsv':
		data = pd.read_csv(DATA['path'], delimiter='\t')
	else:
		data = pd.read_csv(DATA['path'])
	datax = data["$6"]
	datay = data[DATA['column']]

	ax.scatter(datax, datay, s=10, facecolor='none', edgecolor=cmap(ite), linewidths=0.1, label=DATA['name'], marker=MARKER_LIST[ite])
	ax.plot(datax, datay, linewidth=0.1, color=cmap(ite))

	# fitting
	if DO_FITTING:
		def function(x, a, b):
			return a*x+b
		param, cov = curve_fit(function, datax, datay)
		print(f"{param=}")
		print(f"{cov=}")

		# plot line
		graph_range = np.linspace(datax.min(), datax.max())
		ax.plot(graph_range, function(graph_range, *param), linewidth=0.5)
		# print rsq
		# rsq = 1- np.sum((datay-function(datax, *param))**2)/np.sum(((datay-np.mean(datay)))**2)
		# ax.text(-1,6e27,f"$R^2$={rsq:.5f}")
		# ax.text(-2,5e27,f"$y=$({param[0]:.4E})$x+$({param[1]:.4E})")

ax.legend()
plt.savefig(f"{data_path}.pdf", bbox_inches='tight')
endsnippet

snippet plot_instantly "one-liner for plot-debugging" b
from matplotlib.pyplot import plot,hist,imshow,scatter,show,savefig,legend,clf,figure,close
import matplotlib.pyplot as plt
imshow($1)
show()
endsnippet
