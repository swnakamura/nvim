snippet plotbase "plot base" b
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from matplotlib.ticker import AutoMinorLocator, MultipleLocator
from scipy.constants import *
plt.rcParams['text.usetex'] = True
plt.rcParams['axes.axisbelow'] = True
plt.rcParams['font.family'] = 'Times New Roman'

MARKER_LIST = ['o', 'v', '^', '<', '>', 's', 'p']
# see https://matplotlib.org/examples/color/colormaps_reference.html for colormap
cmap = plt.get_cmap("tab10")

DATA_LIST = [
    {"name": r"", "path": "$2"},
]

if __name__ == '__main__':

    fig, ax = plt.subplots()
    ax.xaxis.set_minor_locator(AutoMinorLocator(10))
    ax.yaxis.set_minor_locator(AutoMinorLocator(10))
    ax.tick_params(which='major', direction='in', length=10)
    ax.tick_params(which='minor', direction='in', length=5)
    plt.grid(which='major', color='skyblue', linestyle='-', lw=0.5)
    plt.grid(which='minor', color='skyblue', linestyle='-', lw=0.5)
    ax.set_xlabel(r'$3')
    ax.set_ylabel(r'$4')
    # plt.yscale("log")
    # plt.ylim((0.0001, 100))

    DO_FITTING = $1

    for ite, DATA in enumerate(DATA_LIST):
        data = pd.read_csv(DATA['path'])
        datax = data["$3"]
        datay = data["$4"]

        ax.scatter(datax, datay, s=10,
                   facecolor='none', edgecolor=cmap(ite), linewidths=0.1, label=DATA['name'], marker=MARKER_LIST[ite])

        # fitting
        if DO_FITTING:
            def function(x, a, b):
                return a*x+b
            param, cov = curve_fit(function, datax, datay)
            print(f"{param=}")
            print(f"{cov=}")

            # plot line
            ax.plot(datax, function(datax, *param), linewidth=0.5)
            # print rsq
            rsq = 1- np.sum((datay-function(datax, *param))**2)/np.sum(((datay-np.mean(datay)))**2)
            ax.text(-1,6e27,f"$R^2$={rsq:.5f}")
            ax.text(-2,5e27,f"$y=$({param[0]:.4E})$x+$({param[1]:.4E})")

    ax.legend()
    plt.savefig("$2.pdf", bbox_inches='tight')
endsnippet
