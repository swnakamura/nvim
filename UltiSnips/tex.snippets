global !p
texMathZones = ['texMathZone'+ams+x for ams in ['', 'AMS'] for x in ['A', 'AS', 'B', 'BS', 'C',
'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS',
'J', 'JS', 'K', 'KS', 'L', 'LS', 'V', 'W', 'X', 'Y', 'Z']]

texDisplayMathZones = ['texMathZone'+ams+x for ams in ['', 'AMS'] for x in ['A', 'AS', 'B', 'BS', 'C',
'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS',
'J', 'JS', 'K', 'KS', 'L', 'LS']]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texDisplayMathZoneIds = vim.eval('map('+str(texDisplayMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(
            i for i in reversed(synstackids)
            if i in texIgnoreMathZoneIds or i in texMathZoneIds
        )
		return first != ignore
	except StopIteration:
		return False

def notmath():
    return not math()

def displaymath():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(
            i for i in reversed(synstackids)
            if i in texIgnoreMathZoneIds or i in texDisplayMathZoneIds
        )
		return first != ignore
	except StopIteration:
		return False
endglobal

snippet ebase "English Base" b
\documentclass[12pt,a4paper,titlepage,dvipdfmx]{article}
% \usepackage[margin=2cm]{geometry}
\usepackage[English]{/home/woody/Documents/macros/macros}
%
\title{レポート}
\author{Woody}
%
\begin{document}
\maketitle

\setcounter{tocdepth}{5}
\tableofcontents

Hello, world!
\end{document}
endsnippet

snippet jbase "Japanese Base" b
\documentclass[12pt,a4paper,titlepage,dvipdfmx]{bxjsarticle}
% \usepackage[margin=2cm]{geometry}
\usepackage[Japanese]{/home/woody/Documents/macros/macros}
%
\title{レポート}
\author{Woody}
%
\begin{document}
\maketitle

\includepdf[fitpaper=true]{/home/woody/Documents/barcover.pdf}

\setcounter{tocdepth}{5}
\tableofcontents

Hello, world!
\end{document}
endsnippet

snippet authorShuWithNum "author with num" b
\author{中村 周\\\\\\#1026298925}
endsnippet

snippet authorShu "author" b
\author{中村 周}
endsnippet

snippet barcover "barcover" b
\includepdf[fitpaper=true]{/home/woody/Documents/barcover.pdf}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[b]
    \centering
    \includegraphics[width=80mm]{${1:path}}
    \caption{${2:caption}}
	\label{fig:${5:${1/\W+/_/g}}}
\end{figure}$0
endsnippet

snippet 2fig "2 figures in one line" b
\begin{figure}[b]
    \begin{minipage}{0.5\hsize}
        \centering
        \includegraphics[width=40mm]{$1}
        \label{fig:${2:${1/\W+/_/g}}}
    \end{minipage}
    \begin{minipage}{0.5\hsize}
        \centering
        \includegraphics[width=40mm]{$3}
        \label{fig:${4:${3/\W+/_/g}}}
    \end{minipage}
    \caption{${5:caption}}
\end{figure}$0
endsnippet

snippet 3fig "3 figures in one line"
\begin{figure}[btp]
    \begin{minipage}{0.33\hsize}
        \centering
        \includegraphics[width=40mm]{$1}
        \label{fig:${2:${1/\W+/_/g}}}
    \end{minipage}
    \begin{minipage}{0.33\hsize}
        \centering
        \includegraphics[width=40mm]{$3}
        \label{fig:${4:${3/\W+/_/g}}}
    \end{minipage}
    \begin{minipage}{0.33\hsize}
        \centering
        \includegraphics[width=40mm]{$5}
        \label{fig:${6:${5/\W+/_/g}}}
    \end{minipage}
    \caption{${7:caption}}
\end{figure}$0
endsnippet

snippet ffig "Figure environment full width" b
\begin{figure}[btp]
    \centering
    \includegraphics[width=\linewidth]{${1:path}}
    \caption{${2:caption}}
	\label{fig:${5:${1/\W+/_/g}}}
\end{figure}$0
endsnippet

snippet tab "Table environment" b 
\begin{table}[t]
\centering
\caption{${1:caption}}
\begin{tabular}{|r|r|r|r|}
\hline
$f/\iU{Hz}$ & $|E_{i}|/\iU{V}$ & $|E_{o}|/\iU{V}$ & $\theta/\iU{deg}$ \\\\ \hline
50         & 4.1                & 0.056              & 90               \\\\ \hline
100        & 4.1                & 0.092              & 90               \\\\ \hline
500        & 4.1                & 0.424              & 83.5             \\\\ \hline
700        & 4.1                & 0.577              & 80.5             \\\\ \hline
\end{tabular}
\label{tab:${3:${1/\W+/_/g}}}
\end{table}
endsnippet

snippet lst "lstlisting" b
\begin{lstlisting}[caption={empty},title={プログラム\thelstlisting: $2},label={lst:$2},language=$3,captionpos=b]
$1
\end{lstlisting}
$0
endsnippet

snippet figref "図のreference" i
\figref{fig:$1}$0
endsnippet

snippet tabref "表のreference" i
\tabref{tab:$1}$0
endsnippet

snippet lstref "listingのreference" i
\lstref{lst:$1}$0
endsnippet

snippet eqnref "equationのreference" i
\eqnref{eqn:$1}$0
endsnippet

snippet emph "emphasize" i
\emph{$1}$0
endsnippet

snippet bibtex "load my bibtex"
\bibliographystyle{jplain}
\bibliography{/home/woody/Documents/macros/database.bib}
endsnippet

snippet circuitikz "circuitikz" b
\begin{figure}[btp]
    \centering
    \begin{circuitikz}[]
        $3
    \end{circuitikz}
    \caption{$1}
    \label{fig:${2:${1/\W+/_/g}}}
\end{figure}$0
endsnippet

snippet marker-circuitikz "mark every pin" b
\def\coord(#1){coordinate(#1)}
\def\coord(#1){node[circle, red, draw, inner sep=1pt,pin={[red, overlay, inner sep=0.5pt, font=\tiny, pin distance=0.1cm, pin edge={red, overlay,}]45:#1}](#1){}}
endsnippet

snippet wcond "with condition" iA
\wcond{$1}{$2}$0
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

context "notmath()"
snippet m, "math" iA
\$$1\$$0
endsnippet

context "notmath()"
snippet d, "Math" wA
\[
$1
\] $0
endsnippet

priority 10
context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet __ "roman subscript" iA
_{\rm $1}$0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^2" iA
^3
endsnippet

context "math()"
snippet inv "^{-1}" iA
^{-1}
endsnippet

context "math()"
snippet dag "dagger" iA
^\dagger
endsnippet

context "math()"
snippet pw "superscript" iA
^{$1}$0
endsnippet

# context "math()"
# snippet '\^(\w\S)' "superscript" irA
# ^{`!p snip.rv = match.group(1)`$1}$0
# endsnippet

context "math()"
snippet sb "subscript" iA
_{$1}$0
endsnippet

# priority 10
# context "math()"
# snippet '_(\w\S)' "subscript" irA
# _{`!p snip.rv = match.group(1)`$1}$0
# endsnippet

priority 11
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "displaymath()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

context "displaymath()"
priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet == "equiv" iA
\equiv
endsnippet

context "math()"
snippet scr "mathscr" iA
\mathscr{$1}$0
endsnippet

context "math()"
priority 10
snippet trm "textrm" iA
\textrm{$1}$0
endsnippet

context "math()"
priority 10
snippet mrm "mathrm" iA
\mathrm{$1}$0
endsnippet

context "math()"
snippet "([^\\])bm" "bm" irA
`!p snip.rv = match.group(1)`\bm{$1}$0
endsnippet

context "math()"
snippet "([^\\])tt" "tt" irA
`!p snip.rv = match.group(1)`\mathtt{$1}$0
endsnippet

context "math()"
snippet vi/ "Fraction" iA
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet => "implies" Ai
\implies
endsnippet

context "math()"
snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet ali "Align" bA
\begin{align}
	${1:${VISUAL}}
\end{align}
endsnippet

snippet equ "equation" bA
\begin{equation}
	${1:${VISUAL}}
\end{equation}
endsnippet

snippet prop "proposition" b
\begin{proposition}[$1]
	${2:${VISUAL}}
\end{proposition}
endsnippet

snippet prf "proof" b
\begin{proof}
	${1:${VISUAL}}
\end{proof}
endsnippet

snippet defi "definition" bA
\define{$1}[$2][$3]$0
endsnippet

snippet def "definition" b
\begin{definition}[$1]
    \define{$1}[$2][$3]$0
\end{definition}
endsnippet

snippet theo "theorem" b
\begin{theorem}[$1]
	${2:${VISUAL}}
\end{theorem}
endsnippet

snippet rem "remark" b
\begin{remark}
	${1:${VISUAL}}
\end{remark}
endsnippet

snippet exam "example" b
\begin{example}
	${1:${VISUAL}}
\end{example}
endsnippet

snippet cor "corollary" b
\begin{corollary}
	${1:${VISUAL}}
\end{corollary}
endsnippet

snippet lem "lemma" b
\begin{lemma}
	${1:${VISUAL}}
\end{lemma}
endsnippet

snippet prob "problem" b
\begin{problem}
	${1:${VISUAL}}
\end{problem}
endsnippet

context "math()"
snippet ceil "ceil" iA
\ceil{$1}$0
endsnippet

context "math()"
snippet floor "floor" iA
\floor{$1}$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

snippet vmat "vmat" iA
\begin{vmatrix} $1 \end{vmatrix} $0
endsnippet

priority 10
context "math()"
snippet ( "left( right)" iA
\paren{${1:${VISUAL}}}$0
endsnippet

priority 10
context "math()"
snippet {{ "left{ right}" iA
\curlyb{${1:${VISUAL}}}$0
endsnippet

priority 10
context "math()"
snippet [[ "left[ right]" iA
\squareb{${1:${VISUAL}}}$0
endsnippet

priority 11
context "math()"
snippet bd[ "boundary condition" iA
\squareb{${1:${VISUAL}}}_{${2:-\infty}}^{${3:\infty}} $0
endsnippet

priority 10
context "math()"
snippet lr< "left< right>" iA
\angles{${1:${VISUAL}}} $0
endsnippet

snippet sum "sum" w
\sum_{${1:n}=${2:1}}^{${3:\infty}}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x${5:-a})^$1 $0
endsnippet

snippet sup "superior" w
\sup_{$1} 
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

priority 11
context "displaymath()"
snippet pdif "d/dx" iA
\fracpd[$3]{$1}{${2:x}} $0
endsnippet

priority 12
context "math()"
snippet fpdif "d/dx" iA
\ffracpd[$3]{$1}{${2:x}} $0
endsnippet

priority 10
context "displaymath()"
snippet dif "d/dx" iA
\fracd[$3]{$1}{${2:x}} $0
endsnippet

context "math()"
snippet EE "exists" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet xnp "xn+1" iA
x_{n+1}
endsnippet

context "math()"
snippet xnm "xn+1" iA
x_{n-1}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet ynp "yn+1" iA
y_{n+1}
endsnippet

context "math()"
snippet ynm "yn+1" iA
y_{n-1}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}}$0
endsnippet

snippet rij "mrij" i
\curlyb{${1:x}_${2:n}}_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet <= "leq" iA
\le 
endsnippet

context "math()"
snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet != "neq" iA
\neq 
endsnippet

priority 11
context "math()"
snippet ~= "approximately" iA
\approx 
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

context "math()"
snippet cal "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet lapl "laplacian" iA
\Delta 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet perp "perpendicular" iA
^\perp
endsnippet

context "math()"
snippet trs "tranposed" iA
^\top
endsnippet

context "math()"
snippet "([^\\])abs" "abs" irA
`!p snip.rv = match.group(1)`\abs{$1}$0
endsnippet

context "math()"
snippet "([^\\])dim" "dim" irA
`!p snip.rv = match.group(1)`\dim{$1}$0
endsnippet

context "math()"
priority 11
snippet norm "norm" iA
\norm{$1}$0
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 100
context "math()"
snippet -< "gets" iA
\gets 
endsnippet

priority 200
context "math()"
snippet <_> "leftrightarrow" iA
\Longleftrightarrow
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

snippet >> ">>" iA
\gg 
endsnippet

snippet << "<<" iA
\ll 
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet

snippet notin "not in " iA
\notin 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

context "math()"
snippet subs "subset" iA
\subset 
endsnippet

context "math()"
snippet sub= "subsetequal" iA
\subseteq 
endsnippet

context "math()"
snippet !subs "not subset" iA
\nsubset 
endsnippet

context "math()"
snippet !sub= "not subsetequal" iA
\nsubseteq 
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

context "math()"
snippet dcase "cases" wA
\begin{dcases}
	$1
\end{dcases}
endsnippet

context "math()"
snippet "([^\\])dd" "\dd" wrA
`!p snip.rv = match.group(1)`\dd 
endsnippet

context "math()"
snippet "([^\\])ii" "\ii" wrA
`!p snip.rv = match.group(1)`\ii 
endsnippet

context "math()"
snippet "([^\\])jj" "\jj" wrA
`!p snip.rv = match.group(1)`\jj 
endsnippet

context "math()"
snippet "([^\\])ee" "\ee" wrA
`!p snip.rv = match.group(1)`\ee 
endsnippet

context "math()"
snippet "([^\\])RR" "real" wrA
`!p snip.rv = match.group(1)`\R
endsnippet

context "math()"
snippet "([^\\])ZZ" "real" wrA
`!p snip.rv = match.group(1)`\Z
endsnippet

context "math()"
snippet "([^\\])QQ" "real" wrA
`!p snip.rv = match.group(1)`\Q
endsnippet

context "math()"
snippet "([^\\])NN" "real" wrA
`!p snip.rv = match.group(1)`\N
endsnippet

context "math()"
snippet "([^\\])CC" "real" wrA
`!p snip.rv = match.group(1)`\C
endsnippet

context "math()"
snippet "([^\\])KK" "real" wrA
`!p snip.rv = match.group(1)`\K
endsnippet

context "math()"
snippet "([^\\])VV" "real" wrA
`!p snip.rv = match.group(1)`\V
endsnippet

context "math()"
snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet

context "math()"
priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet

context "math()"
snippet "\<(.*)\|" "bra" riA
\bra{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet

context "math()"
snippet "\|(.*)\>" "ket" riA
\ket{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet

priority 11
context "math()"
snippet "\\bra{(.*)}([^\|]*)([|>])" "bracket" riA
\bracket{`!p snip.rv = match.group(1)`}[`!p snip.rv = match.group(2).replace('q', f'\psi').replace('f', f'\phi')`]
endsnippet

priority 10
context "math()"
snippet "\\bracket{(.*)](.*)>" "bracket" riA
\bracket{`!p snip.rv = match.group(1)`][`!p snip.rv = match.group(2).replace('q', f'\psi').replace('f', f'\phi')`]
endsnippet

priority 10
context "math()"
snippet "vec" "vec" riA
\vec{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])vec" "vec" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

priority 101
context "math()"
snippet "vivec" "vec" riA
\\vec{${VISUAL}}$0
endsnippet


priority 10
context "math()"
snippet "([^\\h])bar" "bar" riA
`!p snip.rv=match.group(1)`\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([^\\])([a-zA-Z])bar" "bar" riA
`!p snip.rv=match.group(1)`\overline{`!p snip.rv=match.group(2)`}
endsnippet

priority 101
context "math()"
snippet "([^\\])hbar" "hbar" riA
`!p snip.rv = match.group(1)`\hbar 
endsnippet

priority 101
context "math()"
snippet "vibar" "bar" riA
\\overline{${VISUAL}}$0
endsnippet

priority 101
context "math()"
snippet "viub" "underbrace" riA
\\underbrace{${VISUAL}}$0
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

priority 101
context "math()"
snippet "vihat" "hat" riA
\\hat{${VISUAL}}$0
endsnippet

context "math()"
snippet  inter "intertext" iA
\intertext{$1}$0
endsnippet

context "math()"
snippet "([^\\])phi" "phi" irA
`!p snip.rv = match.group(1)`\phi 
endsnippet

context "math()"
snippet "([^\\])Phi" "Phi" irA
`!p snip.rv = match.group(1)`\Phi 
endsnippet

context "math()"
snippet "([^\\])psi" "psi" irA
`!p snip.rv = match.group(1)`\psi 
endsnippet

context "math()"
snippet "([^\\])Psi" "Psi" irA
`!p snip.rv = match.group(1)`\Psi 
endsnippet

context "math()"
snippet "([^\\])eps" "epsilon" irA
`!p snip.rv = match.group(1)`\epsilon 
endsnippet

context "math()"
snippet "([^\\])alp" "alpha" irA
`!p snip.rv = match.group(1)`\alpha 
endsnippet

context "math()"
snippet "([^\\])bet" "beta" irA
`!p snip.rv = match.group(1)`\beta 
endsnippet

context "math()"
snippet "([^\\])gam" "gamma" irA
`!p snip.rv = match.group(1)`\gamma 
endsnippet

context "math()"
snippet "([^\\])del" "delta" irA
`!p snip.rv = match.group(1)`\delta 
endsnippet

context "math()"
snippet "([^\\])zet" "zeta" irA
`!p snip.rv = match.group(1)`\zeta 
endsnippet

context "math()"
snippet "([^\\bh])eta" "eta" irA
`!p snip.rv = match.group(1)`\eta 
endsnippet

context "math()"
snippet "([^\\])Gam" "Gamma" irA
`!p snip.rv = match.group(1)`\Gamma 
endsnippet

context "math()"
snippet "([^\\])Del" "Delta" irA
`!p snip.rv = match.group(1)`\Delta 
endsnippet

context "math()"
snippet "([^\\])The" "Theta" irA
`!p snip.rv = match.group(1)`\Theta 
endsnippet

context "math()"
snippet "([^\\])the" "theta" irA
`!p snip.rv = match.group(1)`\theta 
endsnippet

context "math()"
snippet "([^\\])iot" "iota" irA
`!p snip.rv = match.group(1)`\iota 
endsnippet

context "math()"
snippet "([^\\])kap" "kappa" irA
`!p snip.rv = match.group(1)`\kappa 
endsnippet

context "math()"
snippet "([^\\])lam" "lambda" irA
`!p snip.rv = match.group(1)`\lambda 
endsnippet

context "math()"
snippet "([^\\])mu" "mu" irA
`!p snip.rv = match.group(1)`\mu 
endsnippet

context "math()"
snippet "([^\\])nu" "nu" irA
`!p snip.rv = match.group(1)`\nu 
endsnippet

context "math()"
snippet "([^\\])xi" "xi" irA
`!p snip.rv = match.group(1)`\xi 
endsnippet

context "math()"
snippet "([^\\])Lam" "Lambda" irA
`!p snip.rv = match.group(1)`\Lambda 
endsnippet

context "math()"
snippet "([^\\])Xi" "Xi" irA
`!p snip.rv = match.group(1)`\Xi 
endsnippet

context "math()"
snippet "([^\\])Pi" "Pi" irA
`!p snip.rv = match.group(1)`\Pi 
endsnippet

context "math()"
snippet "([^\\])pi" "pi" irA
`!p snip.rv = match.group(1)`\pi 
endsnippet

context "math()"
snippet "([^\\])rho" "rho" irA
`!p snip.rv = match.group(1)`\rho 
endsnippet

context "math()"
snippet "([^\\])sig" "sigma" irA
`!p snip.rv = match.group(1)`\sigma 
endsnippet

context "math()"
snippet "([^\\])tau" "tau" irA
`!p snip.rv = match.group(1)`\tau 
endsnippet

context "math()"
snippet "([^\\])Sig" "Sigma" irA
`!p snip.rv = match.group(1)`\Sigma 
endsnippet

context "math()"
snippet "([^\\])Ups" "Upsilon" irA
`!p snip.rv = match.group(1)`\Upsilon 
endsnippet

context "math()"
snippet "([^\\])ups" "upsilon" irA
`!p snip.rv = match.group(1)`\upsilon 
endsnippet

context "math()"
snippet "([^\\])chi" "chi" irA
`!p snip.rv = match.group(1)`\chi 
endsnippet

context "math()"
snippet "([^\\])ome" "omega" irA
`!p snip.rv = match.group(1)`\omega 
endsnippet

context "math()"
snippet "([^\\])Ome" "Omega" irA
`!p snip.rv = match.group(1)`\Omega 
endsnippet

context "math()"
snippet "([^\\])cos" "cos" irA
`!p snip.rv = match.group(1)`\cos 
endsnippet

context "math()"
snippet "\\cos h" "cosh" irA
\cosh 
endsnippet

context "math()"
snippet "([^\\])sin" "sin" irA
`!p snip.rv = match.group(1)`\sin 
endsnippet

context "math()"
snippet "\\sin c" "sinc" irA
\mathrm{sinc}
endsnippet

context "math()"
snippet "\\sin h" "sinh" irA
\sinh 
endsnippet

context "math()"
snippet "([^\\])tan" "tan" irA
`!p snip.rv = match.group(1)`\tan 
endsnippet

context "math()"
snippet "\\tan h" "tanh" irA
\tanh 
endsnippet

context "math()"
snippet "([^\\])log" "log" irA
`!p snip.rv = match.group(1)`\log 
endsnippet

context "math()"
snippet "([^\\])exp" "exp" irA
`!p snip.rv = match.group(1)`\exp 
endsnippet

context "math()"
snippet "([^\\])min" "min" irA
`!p snip.rv = match.group(1)`\min 
endsnippet

context "math()"
snippet "([^\\])max" "max" irA
`!p snip.rv = match.group(1)`\max 
endsnippet

context "math()"
snippet "([^\\])ln" "logn" irA
`!p snip.rv = match.group(1)`\ln 
endsnippet

context "math()"
snippet "([^\\])Re" "Re" irA
`!p snip.rv = match.group(1)`\Re 
endsnippet

context "math()"
snippet "([^\\])Im" "Im" irA
`!p snip.rv = match.group(1)`\Im 
endsnippet

context "math()"
snippet "([^\\])const" "constant" irA
`!p snip.rv = match.group(1)`\mathrm{const.}
endsnippet

context "math()"
snippet "([^\\])def" "defeq" irA
`!p snip.rv = match.group(1)`\defeq 
endsnippet

context "math()"
snippet "=:" "eqqcolon" irA
\eqqcolon 
endsnippet

context "math()"
snippet ":=" "coloneqq" irA
\coloneqq 
endsnippet

context "math()"
snippet "([^\\])un" "Unit" irA
`!p snip.rv = match.group(1)`\U{$1}$0
endsnippet

context "math()"
snippet 0-0 "infinity" iA
\infty 
endsnippet

context "math()"
snippet "lhs" "left hand side" irA
\mathrm{(l.h.s.)} 
endsnippet

context "math()"
snippet "rhs" "right hand side" irA
\mathrm{(r.h.s.)} 
endsnippet


context "math()"
snippet "sahen" "left hand side" irA
\mathrm{(左辺)} 
endsnippet

context "math()"
snippet "uhen" "right hand side" irA
\mathrm{(右辺)} 
endsnippet

context "math()"
snippet ",," "actual space" irA
\, 
endsnippet

context "math()"
snippet "; " "actual space" irA
;\ 
endsnippet

priority 10
context "math()"
snippet ", " "actual space" irA
,\ 
endsnippet

priority 11
context "math()"
snippet "\\  " "actual space" irA
\quad 
endsnippet

priority 10
context "math()"
snippet .. "dots" iA
\dots 
endsnippet

priority 11
context "math()"
snippet c.. "cdots" iA
\cdots 
endsnippet

priority 11
context "math()"
snippet l.. "ldots" iA
\ldots 
endsnippet

context "math()"
snippet binom "binomial" iA
\\binom{$1}{$2}$0
endsnippet

priority 10
context "math()"
snippet pp "point-to-point-vector" iA
\ppvec{$1}$0
endsnippet
