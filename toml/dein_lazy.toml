[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1

  inoremap <expr><tab> pumvisible() ? "\<C-n>" : "\<tab>"

  inoremap <expr><BS>  deoplete#smart_close_popup()."\<C-h>"

  " Expand the completed snippet trigger by <CR>.
  imap <expr><CR>
  \ (pumvisible() && neosnippet#expandable()) ?
  \ "\<Plug>(neosnippet_expand)" : "<C-r>=<SID>my_cr_function()<CR>"

  function! s:my_cr_function() abort
    return deoplete#close_popup() . "\<CR>"
  endfunction

  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#max_list = 100
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neco-syntax'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=0 concealcursor=niv
  endif
'''
on_i  = 1
depends = ['neosnippet-snippets']

[[plugins]]
repo= 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'davidhalter/jedi'
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-jedi'
hook_source = '''
let g:deoplete#sources#jedi#server_timeout = 20
'''
on_ft = 'python'

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'bps/vim-textobj-python'
on_ft = 'python'

[[plugins]]
repo = 'tell-k/vim-autopep8'
hook_source = '''
nnoremap <leader>ap :Autopep8<CR>
nnoremap rp :QuickRun<Space>python<Space>-outputter/buffer/split<Space>":botright"<Space>-outputter/buffer/close_on_empty<Space>1<Space>-hook/time/enable<Space>1<CR>
'''
on_ft = 'python'

[[plugins]]
repo='prabirshrestha/async.vim'

[[plugins]]
repo='prabirshrestha/vim-lsp'
hook_add='''
if executable('clangd')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'clangd',
        \ 'cmd': {server_info->['clangd']},
        \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
        \ })
endif

let g:lsp_signs_enabled = 1         " enable signs
let g:lsp_diagnostics_echo_cursor = 1 " enable echo under cursor when in normal mode

let g:lsp_signs_error = {'text': '✗'}
let g:lsp_signs_warning = {'text': '‼'}
'''

[[plugins]]
repo='prabirshrestha/asyncomplete.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete-neosnippet.vim'
hook_source='''
call asyncomplete#register_source(asyncomplete#sources#neosnippet#get_source_options({
    \ 'name': 'neosnippet',
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#neosnippet#completor'),
    \ })
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex','cls']
hook_source = '''
let g:tex_conceal = ''
set conceallevel=0
nmap rl stszilatexmk<CR>
'''

#ここを参考https://qiita.com/alpaca_taichou/items/056a4c42fe7a928973e6

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html','htm','md','markdown']
hook_source = '''
let g:user_emmet_leader_key='mm'
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
on_ft = ['c','cpp','python']

[[plugins]]
repo = 'fs111/pydoc.vim'
on_ft = 'python'

[[plugins]]
repo = 'https://github.com/tell-k/vim-browsereload-mac'
on_ft = ['html','htm', 'md']
hook_post_source = '''
" the application to come back after reloading. You can change it.
let g:returnApp = "iTerm"
nmap <Leader>bc :ChromeReloadStart<CR>
nmap <Leader>bC :ChromeReloadStop<CR>
nmap <Leader>bf :FirefoxReloadStart<CR>
nmap <Leader>bF :FirefoxReloadStop<CR>
nmap <Leader>bs :SafariReloadStart<CR>
nmap <Leader>bS :SafariReloadStop<CR>
nmap <Leader>bo :OperaReloadStart<CR>
nmap <Leader>bO :OperaReloadStop<CR>
nmap <Leader>ba :AllBrowserReloadStart<CR>
nmap <Leader>bA :AllBrowserReloadStop<CR>
'''

[[plugins]]
repo = 'https://github.com/hail2u/vim-css3-syntax'
on_ft = ['html','htm']

[[plugins]]
repo = 'https://github.com/pangloss/vim-javascript'
on_ft = ['html','htm']

[[plugins]]
repo = 'https://github.com/kchmck/vim-coffee-script'
on_ft = ['html','htm']

[[plugins]]
repo = 'AtsushiM/search-parent.vim'
on_ft = ['html','htm']

[[plugins]]
repo = 'https://github.com/AtsushiM/sass-compile.vim'
on_ft = ['sass','scss','css']
hook_add = '''
 let g:sass_compile_auto                 = 1
 let g:sass_compile_cdloop               = 5
 let g:sass_compile_cssdir               = ['css', 'stylesheet']
 let g:sass_compile_file                 = ['scss', 'sass']
 let g:sass_started_dirs                 = []
 let g:sass_compile_beforecmd            = ''
 autocmd FileType less,sass  setlocal sw = 2 sts=2 ts=2 et
'''

[[plugins]]
repo = 'https://github.com/akiyan/vim-textobj-php'
on_ft = ['html','htm']

[[plugins]]
repo = 'https://github.com/tpope/vim-surround'
on_ft = ['html','htm']

[[plugins]]
repo = 'https://github.com/ap/vim-css-color'
on_ft = ['html','htm']

[[plugins]]
repo = 'https://github.com/cakebaker/scss-syntax.vim'
on_ft = ['html','htm']

[[plugins]]
repo = 'godlygeek/tabular'
on_ft = ['md']

[[plugins]]
repo = 'wokalski/autocomplete-flow'
on_ft = ['html', 'htm', 'js']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = 'js'

[[plugins]]
repo = 'https://github.com/zeekay/vim-beautify'
on_ft = ['html', 'htm', 'js']
